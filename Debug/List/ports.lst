###############################################################################
#
# IAR C/C++ Compiler V7.12.3.989/W32 for MSP430           15/Oct/2019  12:57:19
# Copyright 1996-2019 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 7.12
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  Z:\Applications\306\Project 05\ports.c
#    Command line  =  
#        -f C:\Users\MOUNAR~1\AppData\Local\Temp\EW7C54.tmp
#        ("Z:\Applications\306\Project 05\ports.c" -lC
#        "Z:\Applications\306\Project 05\Debug\List" -o
#        "Z:\Applications\306\Project 05\Debug\Obj" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --debug -D__MSP430FR2355__ -e
#        --double=32 --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.0\430\lib\dlib\dl430xlsfn.h" -I ./\ --core=430X
#        --data_model=small -On --multiplier=32 --hw_workaround=CPU40
#        --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  Z:\Applications\306\Project 05\Debug\List\ports.lst
#    Object file   =  Z:\Applications\306\Project 05\Debug\Obj\ports.r43
#
###############################################################################

Z:\Applications\306\Project 05\ports.c
      1          #include  "macros.h"
      2          #include  "functions.h"
      3          #include  "msp430.h"

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x204
   \   union <unnamed> _A_PADIR_L
   \                     _A_PADIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x206
   \   union <unnamed> _A_PAREN_L
   \                     _A_PAREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20a
   \   union <unnamed> _A_PASEL0_L
   \                     _A_PASEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20c
   \   union <unnamed> _A_PASEL1_L
   \                     _A_PASEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x218
   \   union <unnamed> _A_PAIES_L
   \                     _A_PAIES_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x21a
   \   union <unnamed> _A_PAIE_L
   \                     _A_PAIE_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x21c
   \   union <unnamed> _A_PAIFG_L
   \                     _A_PAIFG_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x224
   \   union <unnamed> _A_PBDIR_L
   \                     _A_PBDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x226
   \   union <unnamed> _A_PBREN_L
   \                     _A_PBREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22a
   \   union <unnamed> _A_PBSEL0_L
   \                     _A_PBSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22c
   \   union <unnamed> _A_PBSEL1_L
   \                     _A_PBSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x238
   \   union <unnamed> _A_PBIES_L
   \                     _A_PBIES_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x23a
   \   union <unnamed> _A_PBIE_L
   \                     _A_PBIE_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x23c
   \   union <unnamed> _A_PBIFG_L
   \                     _A_PBIFG_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x242
   \   union <unnamed> _A_PCOUT_L
   \                     _A_PCOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x244
   \   union <unnamed> _A_PCDIR_L
   \                     _A_PCDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24a
   \   union <unnamed> _A_PCSEL0_L
   \                     _A_PCSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24c
   \   union <unnamed> _A_PCSEL1_L
   \                     _A_PCSEL1_L:
   \   000000                DS8 2
      4          #include  <string.h>
      5          

   \                                 In  segment CODE, align 2
      6          void Init_Ports(void){
   \                     Init_Ports:
      7            Init_Port1();
   \   000000   ........     CALLA   #Init_Port1
      8            Init_Port2();
   \   000004   ........     CALLA   #Init_Port2
      9            Init_Port3();
   \   000008   ........     CALLA   #Init_Port3
     10            Init_Port4();
   \   00000C   ........     CALLA   #Init_Port4
     11            Init_Port5();
   \   000010   ........     CALLA   #Init_Port5
     12            Init_Port6(); 
   \   000014   ........     BRA     #Init_Port6
     13          }
     14          

   \                                 In  segment CODE, align 2
     15          void Init_Port1(void){
   \                     Init_Port1:
     16            // Configure PORT 1
     17            P1DIR = 0xFF; // Set P1 direction to output
   \   000000   F2430402     MOV.B   #0xff, &0x204
     18            P1OUT = 0x00; // P1 set Low
   \   000004   C2430202     MOV.B   #0x0, &0x202
     19            
     20            P1SEL0 &= ~RED_LED; // RED_LED GPIO operation
   \   000008   D2C30A02     BIC.B   #0x1, &0x20a
     21            P1SEL1 &= ~RED_LED; // RED_LED GPIO operation
   \   00000C   D2C30C02     BIC.B   #0x1, &0x20c
     22            P1DIR |= RED_LED; // Set RED_LED direction to output
   \   000010   D2D30402     BIS.B   #0x1, &0x204
     23            P1OUT |= RED_LED; // Set RED_LED Off [High]
   \   000014   D2D30202     BIS.B   #0x1, &0x202
     24            
     25            P1SEL0 |= A1_SEEED; // A1_SEEED operation
   \   000018   E2D30A02     BIS.B   #0x2, &0x20a
     26            P1SEL1 |= A1_SEEED; // A1_SEEED operation
   \   00001C   E2D30C02     BIS.B   #0x2, &0x20c
     27            
     28            P1SEL0 |= V_DETECT_L; // V_DETECT_L operation
   \   000020   E2D20A02     BIS.B   #0x4, &0x20a
     29            P1SEL1 |= V_DETECT_L; // V_DETECT_L operation
   \   000024   E2D20C02     BIS.B   #0x4, &0x20c
     30            
     31            P1SEL0 |= V_DETECT_R; // V_DETECT_R operation
   \   000028   F2D20A02     BIS.B   #0x8, &0x20a
     32            P1SEL1 |= V_DETECT_R; // V_DETECT_R operation
   \   00002C   F2D20C02     BIS.B   #0x8, &0x20c
     33            
     34            P1SEL0 |= V_BAT; // V_BAT operation
   \   000030   F2D010000A02 BIS.B   #0x10, &0x20a
     35            P1SEL1 |= V_BAT; // V_BAT operation
   \   000036   F2D010000C02 BIS.B   #0x10, &0x20c
     36            
     37            P1SEL0 |= V_THUMB; // V_THUMB operation
   \   00003C   F2D020000A02 BIS.B   #0x20, &0x20a
     38            P1SEL1 |= V_THUMB; // V_THUMB operation
   \   000042   F2D020000C02 BIS.B   #0x20, &0x20c
     39            
     40            P1SEL0 |= UCA0RXD; // UCA0RXD operation
   \   000048   F2D040000A02 BIS.B   #0x40, &0x20a
     41            P1SEL1 &= ~UCA0RXD; // UCA0RXD operation
   \   00004E   F2C040000C02 BIC.B   #0x40, &0x20c
     42            
     43            P1SEL0 |= UCA0TXD; // UCA0TXD operation
   \   000054   F2D080000A02 BIS.B   #0x80, &0x20a
     44            P1SEL1 &= ~UCA0TXD; // UCA0TXD operation
   \   00005A   F2C080000C02 BIC.B   #0x80, &0x20c
     45          }
   \   000060   1001         RETA
   \   000062                REQUIRE _A_PADIR_L
   \   000062                REQUIRE _A_PAOUT_L
   \   000062                REQUIRE _A_PASEL0_L
   \   000062                REQUIRE _A_PASEL1_L
     46          
     47          

   \                                 In  segment CODE, align 2
     48          void Init_Port2(void){
   \                     Init_Port2:
     49            //------------------------------------------------------------------------------
     50            // Configure PORT 2
     51            P2DIR = 0xFF; // Set P2 direction to output
   \   000000   F2430502     MOV.B   #0xff, &0x205
     52            P2OUT = 0x00; // P2 set Low
   \   000004   C2430302     MOV.B   #0x0, &0x203
     53            
     54            P2SEL0 &= ~P2_0; // P2_0 GPIO operation
   \   000008   D2C30B02     BIC.B   #0x1, &0x20b
     55            P2SEL1 &= ~P2_0; // P2_0 GPIO operation
   \   00000C   D2C30D02     BIC.B   #0x1, &0x20d
     56            P2DIR &= ~P2_0; // Direction = input
   \   000010   D2C30502     BIC.B   #0x1, &0x205
     57            
     58            P2SEL0 &= ~P2_1; // P2_1 GPIO operation
   \   000014   E2C30B02     BIC.B   #0x2, &0x20b
     59            P2SEL1 &= ~P2_1; // P2_1 GPIO operation
   \   000018   E2C30D02     BIC.B   #0x2, &0x20d
     60            P2DIR &= ~P2_1; // Direction = input
   \   00001C   E2C30502     BIC.B   #0x2, &0x205
     61            
     62            P2SEL0 &= ~P2_2; // P2_2 GPIO operation
   \   000020   E2C20B02     BIC.B   #0x4, &0x20b
     63            P2SEL1 &= ~P2_2; // P2_2 GPIO operation
   \   000024   E2C20D02     BIC.B   #0x4, &0x20d
     64            P2DIR &= ~P2_2; // Direction = input
   \   000028   E2C20502     BIC.B   #0x4, &0x205
     65            
     66            P2SEL0 &= ~SW2; // SW2 Operation
   \   00002C   F2C20B02     BIC.B   #0x8, &0x20b
     67            P2SEL1 &= ~SW2; // SW2 Operation
   \   000030   F2C20D02     BIC.B   #0x8, &0x20d
     68            P2DIR &= ~SW2; // Direction = input
   \   000034   F2C20502     BIC.B   #0x8, &0x205
     69            P2OUT |= SW2; // Configure pullup resistor
   \   000038   F2D20302     BIS.B   #0x8, &0x203
     70            P2REN |= SW2; // Enable pullup resistor
   \   00003C   F2D20702     BIS.B   #0x8, &0x207
     71            
     72            P2IES |= SW2; // P2.0 Hi/Lo edge interrupt
   \   000040   F2D21902     BIS.B   #0x8, &0x219
     73            P2IFG &= ~SW2; // Clear all P2.6 interrupt flags
   \   000044   F2C21D02     BIC.B   #0x8, &0x21d
     74            P2IE |= SW2; // P2.6 interrupt enabled
   \   000048   F2D21B02     BIS.B   #0x8, &0x21b
     75            
     76            P2SEL0 &= ~P2_4; // P2_4 GPIO operation
   \   00004C   F2C010000B02 BIC.B   #0x10, &0x20b
     77            P2SEL1 &= ~P2_4; // P2_4 GPIO operation
   \   000052   F2C010000D02 BIC.B   #0x10, &0x20d
     78            P2DIR &= ~P2_4; // Direction = input
   \   000058   F2C010000502 BIC.B   #0x10, &0x205
     79            
     80            P2SEL0 &= ~P2_5; // P2_5 GPIO operation
   \   00005E   F2C020000B02 BIC.B   #0x20, &0x20b
     81            P2SEL1 &= ~P2_5; // P2_5 GPIO operation
   \   000064   F2C020000D02 BIC.B   #0x20, &0x20d
     82            P2DIR &= ~P2_5; // Direction = input
   \   00006A   F2C020000502 BIC.B   #0x20, &0x205
     83            
     84            P2SEL0 &= ~LFXOUT; // LFXOUT Clock operation
   \   000070   F2C040000B02 BIC.B   #0x40, &0x20b
     85            P2SEL1 |= LFXOUT; // LFXOUT Clock operation
   \   000076   F2D040000D02 BIS.B   #0x40, &0x20d
     86            
     87            P2SEL0 &= ~LFXIN; // LFXIN Clock operation
   \   00007C   F2C080000B02 BIC.B   #0x80, &0x20b
     88            P2SEL1 |= LFXIN; // LFXIN Clock operation
   \   000082   F2D080000D02 BIS.B   #0x80, &0x20d
     89            //------------------------------------------------------------------------------
     90          }
   \   000088   1001         RETA
   \   00008A                REQUIRE _A_PADIR_L
   \   00008A                REQUIRE _A_PAOUT_L
   \   00008A                REQUIRE _A_PASEL0_L
   \   00008A                REQUIRE _A_PASEL1_L
   \   00008A                REQUIRE _A_PAREN_L
   \   00008A                REQUIRE _A_PAIES_L
   \   00008A                REQUIRE _A_PAIFG_L
   \   00008A                REQUIRE _A_PAIE_L
     91          

   \                                 In  segment CODE, align 2
     92          void Init_Port3(void){
   \                     Init_Port3:
     93            // Configure PORT 3
     94            P3DIR = 0xFF; // Set P3 direction to output
   \   000000   F2432402     MOV.B   #0xff, &0x224
     95            P3OUT = 0x00; // P3 set Low
   \   000004   C2432202     MOV.B   #0x0, &0x222
     96            
     97            P3SEL0 &= ~TEST_PROBE; // TEST_PROBE GPIO operation
   \   000008   D2C32A02     BIC.B   #0x1, &0x22a
     98            P3SEL1 &= ~TEST_PROBE; // TEST_PROBE GPIO operation
   \   00000C   D2C32C02     BIC.B   #0x1, &0x22c
     99            P3DIR &= ~TEST_PROBE; // Direction = input
   \   000010   D2C32402     BIC.B   #0x1, &0x224
    100            
    101            P3SEL0 |= OA20; // OA20 operation
   \   000014   E2D32A02     BIS.B   #0x2, &0x22a
    102            P3SEL1 |= OA20; // OA20 operation
   \   000018   E2D32C02     BIS.B   #0x2, &0x22c
    103            
    104            P3SEL0 |= OA2N; // OA2N operation
   \   00001C   E2D22A02     BIS.B   #0x4, &0x22a
    105            P3SEL1 |= OA2N; // OA2N operation
   \   000020   E2D22C02     BIS.B   #0x4, &0x22c
    106            
    107            P3SEL0 |= OA2P; // OA2P operation
   \   000024   F2D22A02     BIS.B   #0x8, &0x22a
    108            P3SEL1 |= OA2P; // OA2P operation
   \   000028   F2D22C02     BIS.B   #0x8, &0x22c
    109            /*
    110            P3SEL0 &= ~SMCLK_OUT; // P3_4 GPIO operation
    111            P3SEL1 &= ~SMCLK_OUT; // P3_4 GPIO operation
    112            P3DIR &= ~SMCLK_OUT; // Direction = input
    113            */
    114            P3SEL0 &= ~SMCLK_OUT; // P3_4 GPIO operation
   \   00002C   F2C010002A02 BIC.B   #0x10, &0x22a
    115            P3SEL1 &= ~SMCLK_OUT; // P3_4 GPIO operation
   \   000032   F2C010002C02 BIC.B   #0x10, &0x22c
    116            P3DIR &= ~SMCLK_OUT; // Direction = input
   \   000038   F2C010002402 BIC.B   #0x10, &0x224
    117            //P3SEL0 |= SMCLK_OUT; // SMCLK_OUT function operation
    118            //P3SEL1 &= ~SMCLK_OUT; // SMCLK_OUT function operation
    119            
    120            P3SEL0 &= ~P3_5; // P3_5 GPIO operation
   \   00003E   F2C020002A02 BIC.B   #0x20, &0x22a
    121            P3SEL1 &= ~P3_5; // P3_5 GPIO operation
   \   000044   F2C020002C02 BIC.B   #0x20, &0x22c
    122            P3DIR &= ~P3_5; // Direction = input
   \   00004A   F2C020002402 BIC.B   #0x20, &0x224
    123            
    124            P3SEL0 &= ~IOT_LINK; // IOT_LINK operation
   \   000050   F2C040002A02 BIC.B   #0x40, &0x22a
    125            P3SEL1 &= ~IOT_LINK; // IOT_LINK GPIO operation
   \   000056   F2C040002C02 BIC.B   #0x40, &0x22c
    126            P3DIR &= ~IOT_LINK; // Direction = input
   \   00005C   F2C040002402 BIC.B   #0x40, &0x224
    127            
    128            P3SEL0 &= ~P3_7; // P3_7 GPIO operation
   \   000062   F2C080002A02 BIC.B   #0x80, &0x22a
    129            P3SEL1 &= ~P3_7; // P3_7 GPIO operation
   \   000068   F2C080002C02 BIC.B   #0x80, &0x22c
    130            P3DIR &= ~P3_7; // Direction = input
   \   00006E   F2C080002402 BIC.B   #0x80, &0x224
    131          }
   \   000074   1001         RETA
   \   000076                REQUIRE _A_PBDIR_L
   \   000076                REQUIRE _A_PBOUT_L
   \   000076                REQUIRE _A_PBSEL0_L
   \   000076                REQUIRE _A_PBSEL1_L
    132          

   \                                 In  segment CODE, align 2
    133          void Init_Port4(void){
   \                     Init_Port4:
    134            //------------------------------------------------------------------------------
    135            // Configure PORT 4
    136            P4DIR = 0xFF; // Set P4 direction to output
   \   000000   F2432502     MOV.B   #0xff, &0x225
    137            P4OUT = 0x00; // P4 set Low
   \   000004   C2432302     MOV.B   #0x0, &0x223
    138            
    139            P4SEL0 &= ~RESET_LCD; // RESET_LCD GPIO operation
   \   000008   D2C32B02     BIC.B   #0x1, &0x22b
    140            P4SEL1 &= ~RESET_LCD; // RESET_LCD GPIO operation
   \   00000C   D2C32D02     BIC.B   #0x1, &0x22d
    141            P4DIR |= RESET_LCD; // Set RESET_LCD direction to output
   \   000010   D2D32502     BIS.B   #0x1, &0x225
    142            P4OUT |= RESET_LCD; // Set RESET_LCD Off [High]
   \   000014   D2D32302     BIS.B   #0x1, &0x223
    143            
    144            P4SEL0 &= ~SW1; // SW1 GPIO operation
   \   000018   E2C32B02     BIC.B   #0x2, &0x22b
    145            P4SEL1 &= ~SW1; // SW1 GPIO operation
   \   00001C   E2C32D02     BIC.B   #0x2, &0x22d
    146            P4DIR &= ~SW1; // Direction = input
   \   000020   E2C32502     BIC.B   #0x2, &0x225
    147            P4OUT |= SW1; // Configure pullup resistor
   \   000024   E2D32302     BIS.B   #0x2, &0x223
    148            P4REN |= SW1; // Enable pullup resistor
   \   000028   E2D32702     BIS.B   #0x2, &0x227
    149            
    150            P4IES |= SW1; // P2.0 Hi/Lo edge interrupt
   \   00002C   E2D33902     BIS.B   #0x2, &0x239
    151            P4IFG &= ~SW1; // Clear all P2.6 interrupt flags
   \   000030   E2C33D02     BIC.B   #0x2, &0x23d
    152            P4IE |= SW1; // P2.6 interrupt enabled
   \   000034   E2D33B02     BIS.B   #0x2, &0x23b
    153            
    154            P4SEL0 |= UCA1TXD; // USCI_A1 UART operation
   \   000038   F2D22B02     BIS.B   #0x8, &0x22b
    155            P4SEL1 &= ~UCA1TXD; // USCI_A1 UART operation
   \   00003C   F2C22D02     BIC.B   #0x8, &0x22d
    156            
    157            P4SEL0 |= UCA1RXD; // USCI_A1 UART operation
   \   000040   E2D22B02     BIS.B   #0x4, &0x22b
    158            P4SEL1 &= ~UCA1RXD; // USCI_A1 UART operation
   \   000044   E2C22D02     BIC.B   #0x4, &0x22d
    159            
    160            P4SEL0 &= ~UCB1_CS_LCD; // UCB1_CS_LCD GPIO operation
   \   000048   F2C010002B02 BIC.B   #0x10, &0x22b
    161            P4SEL1 &= ~UCB1_CS_LCD; // UCB1_CS_LCD GPIO operation
   \   00004E   F2C010002D02 BIC.B   #0x10, &0x22d
    162            P4DIR |= UCB1_CS_LCD; // Set SPI_CS_LCD direction to output
   \   000054   F2D010002502 BIS.B   #0x10, &0x225
    163            P4OUT |= UCB1_CS_LCD; // Set SPI_CS_LCD Off [High]
   \   00005A   F2D010002302 BIS.B   #0x10, &0x223
    164            
    165            P4SEL0 |= UCB1CLK; // UCB1CLK SPI BUS operation
   \   000060   F2D020002B02 BIS.B   #0x20, &0x22b
    166            P4SEL1 &= ~UCB1CLK; // UCB1CLK SPI BUS operation
   \   000066   F2C020002D02 BIC.B   #0x20, &0x22d
    167            
    168            P4SEL0 |= UCB1SIMO; // UCB1SIMO SPI BUS operation
   \   00006C   F2D040002B02 BIS.B   #0x40, &0x22b
    169            P4SEL1 &= ~UCB1SIMO; // UCB1SIMO SPI BUS operation
   \   000072   F2C040002D02 BIC.B   #0x40, &0x22d
    170            
    171            P4SEL0 |= UCB1SOMI; // UCB1SOMI SPI BUS operation
   \   000078   F2D080002B02 BIS.B   #0x80, &0x22b
    172            P4SEL1 &= ~UCB1SOMI; // UCB1SOMI SPI BUS operation
   \   00007E   F2C080002D02 BIC.B   #0x80, &0x22d
    173            //------------------------------------------------------------------------------
    174          }
   \   000084   1001         RETA
   \   000086                REQUIRE _A_PBDIR_L
   \   000086                REQUIRE _A_PBOUT_L
   \   000086                REQUIRE _A_PBSEL0_L
   \   000086                REQUIRE _A_PBSEL1_L
   \   000086                REQUIRE _A_PBREN_L
   \   000086                REQUIRE _A_PBIES_L
   \   000086                REQUIRE _A_PBIFG_L
   \   000086                REQUIRE _A_PBIE_L
    175          

   \                                 In  segment CODE, align 2
    176          void Init_Port5(void){
   \                     Init_Port5:
    177            // Configure PORT 5
    178            P5DIR = 0xFF; // Set P5 direction to output
   \   000000   F2434402     MOV.B   #0xff, &0x244
    179            P5OUT = 0x00; // P5 set Low
   \   000004   C2434202     MOV.B   #0x0, &0x242
    180            
    181            P5SEL0 &= ~IOT_RESET; // IOT_RESET GPIO operation
   \   000008   D2C34A02     BIC.B   #0x1, &0x24a
    182            P5SEL1 &= ~IOT_RESET; // IOT_RESET GPIO operation
   \   00000C   D2C34C02     BIC.B   #0x1, &0x24c
    183            P5DIR &= ~IOT_RESET; // Direction = input
   \   000010   D2C34402     BIC.B   #0x1, &0x244
    184            
    185            P5SEL0 &= ~IR_LED; // IR_LED GPIO operation
   \   000014   E2C34A02     BIC.B   #0x2, &0x24a
    186            P5SEL1 &= ~IR_LED; // IR_LED GPIO operation
   \   000018   E2C34C02     BIC.B   #0x2, &0x24c
    187            P5DIR &= ~IR_LED; // Direction = input
   \   00001C   E2C34402     BIC.B   #0x2, &0x244
    188            
    189            P5SEL0 &= ~IOT_PROG_SEL; // IOT_PROG_SEL GPIO operation
   \   000020   E2C24A02     BIC.B   #0x4, &0x24a
    190            P5SEL1 &= ~IOT_PROG_SEL; // IOT_PROG_SEL GPIO operation
   \   000024   E2C24C02     BIC.B   #0x4, &0x24c
    191            P5DIR &= ~IOT_PROG_SEL; // Direction = input
   \   000028   E2C24402     BIC.B   #0x4, &0x244
    192            
    193            P5SEL0 &= ~IOT_PROG_MODE; // IOT_PROG_MODE GPIO operation
   \   00002C   F2C24A02     BIC.B   #0x8, &0x24a
    194            P5SEL1 &= ~IOT_PROG_MODE; // IOT_PROG_MODE GPIO operation
   \   000030   F2C24C02     BIC.B   #0x8, &0x24c
    195            P5DIR &= ~IOT_PROG_MODE; // Direction = input
   \   000034   F2C24402     BIC.B   #0x8, &0x244
    196            
    197            P5SEL0 &= ~CHECK_BAT; // CHECK_BAT GPIO operation
   \   000038   F2C010004A02 BIC.B   #0x10, &0x24a
    198            P5SEL1 &= ~CHECK_BAT; // CHECK_BAT GPIO operation
   \   00003E   F2C010004C02 BIC.B   #0x10, &0x24c
    199            P5DIR &= ~CHECK_BAT; // Direction = input
   \   000044   F2C010004402 BIC.B   #0x10, &0x244
    200          }
   \   00004A   1001         RETA
   \   00004C                REQUIRE _A_PCDIR_L
   \   00004C                REQUIRE _A_PCOUT_L
   \   00004C                REQUIRE _A_PCSEL0_L
   \   00004C                REQUIRE _A_PCSEL1_L
    201          

   \                                 In  segment CODE, align 2
    202          void Init_Port6(void){
   \                     Init_Port6:
    203            // Configure PORT 6
    204            P6DIR = 0xFF; // Set P6 direction to output
   \   000000   F2434502     MOV.B   #0xff, &0x245
    205            P6OUT = 0x00; // P6 set Low
   \   000004   C2434302     MOV.B   #0x0, &0x243
    206            
    207            P6SEL0 |= R_FORWARD; 
   \   000008   D2D34B02     BIS.B   #0x1, &0x24b
    208            P6SEL1 &= ~R_FORWARD; 
   \   00000C   D2C34D02     BIC.B   #0x1, &0x24d
    209            P6DIR |= R_FORWARD; 
   \   000010   D2D34502     BIS.B   #0x1, &0x245
    210            //P6OUT &= ~R_FORWARD; 
    211            
    212            P6SEL0 |= L_FORWARD; 
   \   000014   E2D34B02     BIS.B   #0x2, &0x24b
    213            P6SEL1 &= ~L_FORWARD; 
   \   000018   E2C34D02     BIC.B   #0x2, &0x24d
    214            P6DIR |= L_FORWARD; 
   \   00001C   E2D34502     BIS.B   #0x2, &0x245
    215            //P6OUT &= ~L_FORWARD; 
    216            
    217            P6SEL0 |= R_REVERSE; 
   \   000020   E2D24B02     BIS.B   #0x4, &0x24b
    218            P6SEL1 &= ~R_REVERSE; 
   \   000024   E2C24D02     BIC.B   #0x4, &0x24d
    219            P6DIR |= R_REVERSE; 
   \   000028   E2D24502     BIS.B   #0x4, &0x245
    220            //P6OUT &= ~R_REVERSE;  
    221            
    222            P6SEL0 |= L_REVERSE; 
   \   00002C   F2D24B02     BIS.B   #0x8, &0x24b
    223            P6SEL1 &= ~L_REVERSE; 
   \   000030   F2C24D02     BIC.B   #0x8, &0x24d
    224            P6DIR |= L_REVERSE; 
   \   000034   F2D24502     BIS.B   #0x8, &0x245
    225            //P6OUT &= ~L_REVERSE; 
    226            
    227            P6SEL0 &= ~LCD_BACKLITE; // LCD_BACKLITE GPIO operation
   \   000038   F2C010004B02 BIC.B   #0x10, &0x24b
    228            P6SEL1 &= ~LCD_BACKLITE; // LCD_BACKLITE GPIO operation
   \   00003E   F2C010004D02 BIC.B   #0x10, &0x24d
    229            P6DIR |= LCD_BACKLITE; // Set LCD_BACKLITE direction to output
   \   000044   F2D010004502 BIS.B   #0x10, &0x245
    230            P6OUT |= LCD_BACKLITE; // Set LCD_BACKLITE On [High]
   \   00004A   F2D010004302 BIS.B   #0x10, &0x243
    231            
    232            P6SEL0 &= ~P6_5; //  GPIO operation
   \   000050   F2C020004B02 BIC.B   #0x20, &0x24b
    233            P6SEL1 &= ~P6_5; // P2_5 GPIO operation
   \   000056   F2C020004D02 BIC.B   #0x20, &0x24d
    234            P6DIR &= ~P6_5; // Direction = input
   \   00005C   F2C020004502 BIC.B   #0x20, &0x245
    235            
    236            P6SEL0 &= ~GRN_LED; // GRN_LED GPIO operation
   \   000062   F2C040004B02 BIC.B   #0x40, &0x24b
    237            P6SEL1 &= ~GRN_LED; // GRN_LED GPIO operation
   \   000068   F2C040004D02 BIC.B   #0x40, &0x24d
    238            P6DIR |= GRN_LED; // Set GRN_LED direction to output
   \   00006E   F2D040004502 BIS.B   #0x40, &0x245
    239            P6OUT |= GRN_LED; // Set GRN_LED Off [High]
   \   000074   F2D040004302 BIS.B   #0x40, &0x243
    240          }
   \   00007A   1001         RETA
   \   00007C                REQUIRE _A_PCDIR_L
   \   00007C                REQUIRE _A_PCOUT_L
   \   00007C                REQUIRE _A_PCSEL0_L
   \   00007C                REQUIRE _A_PCSEL1_L

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Port1
      4   Init_Port2
      4   Init_Port3
      4   Init_Port4
      4   Init_Port5
      4   Init_Port6
      4   Init_Ports
        4   -> Init_Port1
        4   -> Init_Port2
        4   -> Init_Port3
        4   -> Init_Port4
        4   -> Init_Port5
        0   -> Init_Port6


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      98  Init_Port1
     138  Init_Port2
     118  Init_Port3
     134  Init_Port4
      76  Init_Port5
     124  Init_Port6
      24  Init_Ports
       2  _A_PADIR_L
       2  _A_PAIES_L
       2  _A_PAIE_L
       2  _A_PAIFG_L
       2  _A_PAOUT_L
       2  _A_PAREN_L
       2  _A_PASEL0_L
       2  _A_PASEL1_L
       2  _A_PBDIR_L
       2  _A_PBIES_L
       2  _A_PBIE_L
       2  _A_PBIFG_L
       2  _A_PBOUT_L
       2  _A_PBREN_L
       2  _A_PBSEL0_L
       2  _A_PBSEL1_L
       2  _A_PCDIR_L
       2  _A_PCOUT_L
       2  _A_PCSEL0_L
       2  _A_PCSEL1_L

 
 712 bytes in segment CODE
  40 bytes in segment DATA16_AN
 
 712 bytes of CODE memory
   0 bytes of DATA memory (+ 40 bytes shared)

Errors: none
Warnings: none
