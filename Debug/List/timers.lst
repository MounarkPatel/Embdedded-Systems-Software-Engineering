###############################################################################
#
# IAR C/C++ Compiler V7.12.3.989/W32 for MSP430           15/Oct/2019  12:57:19
# Copyright 1996-2019 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 7.12
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  Z:\Applications\306\Project 05\timers.c
#    Command line  =  
#        -f C:\Users\MOUNAR~1\AppData\Local\Temp\EW7C84.tmp
#        ("Z:\Applications\306\Project 05\timers.c" -lC
#        "Z:\Applications\306\Project 05\Debug\List" -o
#        "Z:\Applications\306\Project 05\Debug\Obj" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --debug -D__MSP430FR2355__ -e
#        --double=32 --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.0\430\lib\dlib\dl430xlsfn.h" -I ./\ --core=430X
#        --data_model=small -On --multiplier=32 --hw_workaround=CPU40
#        --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  Z:\Applications\306\Project 05\Debug\List\timers.lst
#    Object file   =  Z:\Applications\306\Project 05\Debug\Obj\timers.r43
#
###############################################################################

Z:\Applications\306\Project 05\timers.c
      1          #include  "functions.h"
      2          #include  "msp430.h"

   \                                 In  segment DATA16_AN, at 0x380
   \   union <unnamed> _A_TB0CTL_L
   \                     _A_TB0CTL_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x382
   \   union <unnamed> _A_TB0CCTL0_L
   \                     _A_TB0CCTL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x384
   \   union <unnamed> _A_TB0CCTL1_L
   \                     _A_TB0CCTL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x386
   \   union <unnamed> _A_TB0CCTL2_L
   \                     _A_TB0CCTL2_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x392
   \   union <unnamed> _A_TB0CCR0_L
   \                     _A_TB0CCR0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x394
   \   union <unnamed> _A_TB0CCR1_L
   \                     _A_TB0CCR1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x396
   \   union <unnamed> _A_TB0CCR2_L
   \                     _A_TB0CCR2_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x3a0
   \   union <unnamed> _A_TB0EX0_L
   \                     _A_TB0EX0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x440
   \   union <unnamed> _A_TB3CTL_L
   \                     _A_TB3CTL_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x444
   \   union <unnamed> _A_TB3CCTL1_L
   \                     _A_TB3CCTL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x446
   \   union <unnamed> _A_TB3CCTL2_L
   \                     _A_TB3CCTL2_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x448
   \   union <unnamed> _A_TB3CCTL3_L
   \                     _A_TB3CCTL3_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x44a
   \   union <unnamed> _A_TB3CCTL4_L
   \                     _A_TB3CCTL4_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x452
   \   union <unnamed> _A_TB3CCR0_L
   \                     _A_TB3CCR0_L:
   \   000000                DS8 2
      3          #include  <string.h>
      4          #include  "macros.h"
      5          
      6          

   \                                 In  segment CODE, align 2
      7          void Init_Timers(void)
   \                     Init_Timers:
      8          {
      9            Init_Timer_B0();
   \   000000   ........     CALLA   #Init_Timer_B0
     10            Init_Timer_B3();
   \   000004   ........     BRA     #Init_Timer_B3
     11          }
     12          
     13          //Main usage of this timer is that it enables the Timer0_B0_ISR 

   \                                 In  segment CODE, align 2
     14          void Init_Timer_B0(void) 
   \                     Init_Timer_B0:
     15          {
     16            TB0CTL = TBSSEL__SMCLK; // SMCLK source
   \   000000   B24000028003 MOV.W   #0x200, &0x380
     17            TB0CTL |= TBCLR; // Resets TB0R, clock divider, count direction
   \   000006   A2D28003     BIS.W   #0x4, &0x380
     18            TB0CTL |= MC__CONTINOUS; // Continuous up
   \   00000A   B2D020008003 BIS.W   #0x20, &0x380
     19            TB0CTL |= ID__2; // Divide clock by 2
   \   000010   B2D040008003 BIS.W   #0x40, &0x380
     20            TB0EX0 = TBIDEX__8; // Divide clock by an additional 8
   \   000016   B2400700A003 MOV.W   #0x7, &0x3a0
     21            
     22            //Capture Compare 0
     23            TB0CCR0 = TB0CCR0_INTERVAL; // CCR0
   \   00001C   B240C4099203 MOV.W   #0x9c4, &0x392
     24            TB0CCTL0 |= CCIE; // CCR0 enable interrupt
   \   000022   B2D010008203 BIS.W   #0x10, &0x382
     25            
     26            //Capture Compare 1
     27            TB0CCR1 = TB0CCR1_INTERVAL; // CCR1
                             ^
Warning[Pe069]: integer conversion resulted in truncation
   \   000028   B240D0DD9403 MOV.W   #0xddd0, &0x394
     28            TB0CCTL1 &=~ CCIE; // CCR1 enable interrupt
   \   00002E   B2C010008403 BIC.W   #0x10, &0x384
     29            
     30            //Capture Compare 2
     31            TB0CCR2 = TB0CCR2_INTERVAL; // CCR2
                             ^
Warning[Pe069]: integer conversion resulted in truncation
   \   000034   B240D0DD9603 MOV.W   #0xddd0, &0x396
     32            TB0CCTL2 &= ~CCIE; // CCR2 enable interrupt
   \   00003A   B2C010008603 BIC.W   #0x10, &0x386
     33            
     34            TB0CTL &= ~TBIE; // Disable Overflow Interrupt
   \   000040   A2C38003     BIC.W   #0x2, &0x380
     35            TB0CTL &= ~TBIFG; // Clear Overflow Interrupt flag
   \   000044   92C38003     BIC.W   #0x1, &0x380
     36          }
   \   000048   1001         RETA
   \   00004A                REQUIRE _A_TB0CTL_L
   \   00004A                REQUIRE _A_TB0EX0_L
   \   00004A                REQUIRE _A_TB0CCR0_L
   \   00004A                REQUIRE _A_TB0CCTL0_L
   \   00004A                REQUIRE _A_TB0CCR1_L
   \   00004A                REQUIRE _A_TB0CCTL1_L
   \   00004A                REQUIRE _A_TB0CCR2_L
   \   00004A                REQUIRE _A_TB0CCTL2_L
     37          
     38          
     39          //Used for pulse width modulation to control motor speeds on car precisely

   \                                 In  segment CODE, align 2
     40          void Init_Timer_B3(void) 
   \                     Init_Timer_B3:
     41          {
     42            //------------------------------------------------------------------------------
     43            // SMCLK source, up count mode, PWM Right Side
     44            // TB3.1 P6.0 R_FORWARD
     45            // TB3.2 P6.1 L_FORWARD
     46            // TB3.3 P6.2 R_REVERSE
     47            // TB3.4 P6.3 L_REVERSE
     48            //------------------------------------------------------------------------------
     49            TB3CTL = TBSSEL__SMCLK; // SMCLK
   \   000000   B24000024004 MOV.W   #0x200, &0x440
     50            TB3CTL |= MC__UP; // Up Mode
   \   000006   B2D010004004 BIS.W   #0x10, &0x440
     51            TB3CTL |= TBCLR; // Clear TAR
   \   00000C   A2D24004     BIS.W   #0x4, &0x440
     52            
     53            TB3CCR0 = WHEEL_PERIOD; // PWM Period
   \   000010   B240E8035204 MOV.W   #0x3e8, &0x452
     54            TB3CCTL1 = OUTMOD_7; // CCR1 reset/set
   \   000016   B240E0004404 MOV.W   #0xe0, &0x444
     55            TB3CCTL2 = OUTMOD_7; // CCR2 reset/set
   \   00001C   B240E0004604 MOV.W   #0xe0, &0x446
     56            TB3CCTL3 = OUTMOD_7; // CCR3 reset/set
   \   000022   B240E0004804 MOV.W   #0xe0, &0x448
     57            TB3CCTL4 = OUTMOD_7;
   \   000028   B240E0004A04 MOV.W   #0xe0, &0x44a
     58          }
   \   00002E   1001         RETA
   \   000030                REQUIRE _A_TB3CTL_L
   \   000030                REQUIRE _A_TB3CCR0_L
   \   000030                REQUIRE _A_TB3CCTL1_L
   \   000030                REQUIRE _A_TB3CCTL2_L
   \   000030                REQUIRE _A_TB3CCTL3_L
   \   000030                REQUIRE _A_TB3CCTL4_L
     59          
     60          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Timer_B0
      4   Init_Timer_B3
      4   Init_Timers
        4   -> Init_Timer_B0
        0   -> Init_Timer_B3


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      74  Init_Timer_B0
      48  Init_Timer_B3
       8  Init_Timers
       2  _A_TB0CCR0_L
       2  _A_TB0CCR1_L
       2  _A_TB0CCR2_L
       2  _A_TB0CCTL0_L
       2  _A_TB0CCTL1_L
       2  _A_TB0CCTL2_L
       2  _A_TB0CTL_L
       2  _A_TB0EX0_L
       2  _A_TB3CCR0_L
       2  _A_TB3CCTL1_L
       2  _A_TB3CCTL2_L
       2  _A_TB3CCTL3_L
       2  _A_TB3CCTL4_L
       2  _A_TB3CTL_L

 
 130 bytes in segment CODE
  28 bytes in segment DATA16_AN
 
 130 bytes of CODE memory
   0 bytes of DATA memory (+ 28 bytes shared)

Errors: none
Warnings: 2
